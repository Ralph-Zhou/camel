import json
from datetime import datetime
from camel.datahubs.huggingface import HuggingFaceDatasetManager
from camel.datahubs.models import Record

def transform_qa_format(input_file):
    # Read the input JSON file
    with open(input_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    # Transform the data
    transformed_data = []
    for question, answer in data['qa_pairs'].items():
        transformed_pair = {
            "instruction": question,
            "input": "",
            "output": answer
        }
        transformed_data.append(transformed_pair)
    
    # Generate output filename with timestamp
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    output_file = f'transformed_qa_{timestamp}.json'
    
    # Write the transformed data
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(transformed_data, f, ensure_ascii=False, indent=2)
    
    return output_file, transformed_data

def upload_to_huggingface(transformed_data, username, dataset_name=None):
    manager = HuggingFaceDatasetManager()
    
    if dataset_name is None:
        dataset_name = f"{username}/qa-dataset-{datetime.now().strftime('%Y%m%d')}"
    else:
        dataset_name = f"{username}/{dataset_name}"
    
    # Create records
    records = []
    for idx, item in enumerate(transformed_data):
        record = Record(
            id=f"record-{idx+1}",
            content={
                "instruction": item["instruction"],
                "input": item["input"],
                "output": item["output"]
            },
            metadata={"method": "CAMEL-O1DataGene"}
        )
        records.append(record)
    
    # Create dataset
    print(f"Creating dataset: {dataset_name}")
    dataset_url = manager.create_dataset(name=dataset_name)
    print(f"Dataset created: {dataset_url}")
    
    # Create dataset card
    print("Creating dataset card...")
    manager.create_dataset_card(
        dataset_name=dataset_name,
        description="Question-Answer dataset generated by CAMEL O1DataGene",
        license="mit",
        language=["en"],
        size_category="<1MB",
        version="0.1.0",
        tags=["camel", "question-answering"],
        task_categories=["question-answering"],
        authors=[username]
    )
    print("Dataset card created successfully.")
    
    # Add records
    print("Adding records to the dataset...")
    manager.add_records(dataset_name=dataset_name, records=records)
    print("Records added successfully.")
    
    return dataset_url

if __name__ == "__main__":
    # Use the latest generated answers file
    input_file = "generated_answers_20241210_104117.json"
    output_file, transformed_data = transform_qa_format(input_file)
    print(f"Transformation complete. Output saved to: {output_file}")
    
    # Upload to HuggingFace
    username = input("Enter your HuggingFace username: ")
    dataset_name = input("Enter dataset name (press Enter to use default): ").strip()
    if not dataset_name:
        dataset_name = None
    
    try:
        dataset_url = upload_to_huggingface(transformed_data, username, dataset_name)
        print(f"\nData successfully uploaded to HuggingFace!")
        print(f"Dataset URL: {dataset_url}")
    except Exception as e:
        print(f"Error uploading to HuggingFace: {str(e)}")
